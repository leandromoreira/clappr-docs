{
    "project": {
        "name": "Clappr",
        "description": "An extensible media player for the web",
        "version": "0.2.38",
        "url": "https://github.com/clappr/clappr",
        "logo": "https://cloud.githubusercontent.com/assets/244265/6373134/a845eb50-bce7-11e4-80f2-592ba29972ab.png"
    },
    "files": {
        "src/base/events.js": {
            "name": "src/base/events.js",
            "modules": {
                "base": 1
            },
            "classes": {
                "Events": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/base/playback.js": {
            "name": "src/base/playback.js",
            "modules": {},
            "classes": {
                "Playback": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/components/container/container.js": {
            "name": "src/components/container/container.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/components/container_factory/container_factory.js": {
            "name": "src/components/container_factory/container_factory.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/components/core/core.js": {
            "name": "src/components/core/core.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/components/core_factory/core_factory.js": {
            "name": "src/components/core_factory/core_factory.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/components/media_control/media_control.js": {
            "name": "src/components/media_control/media_control.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/components/mediator.js": {
            "name": "src/components/mediator.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/components/player.js": {
            "name": "src/components/player.js",
            "modules": {
                "components": 1
            },
            "classes": {
                "Player": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/playbacks/hls/hls.js": {
            "name": "src/playbacks/hls/hls.js",
            "modules": {
                "playback": 1
            },
            "classes": {
                "HLS": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/playbacks/html5_video/html5_video.js": {
            "name": "src/playbacks/html5_video/html5_video.js",
            "modules": {},
            "classes": {
                "HTML5Video": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "base": {
            "name": "base",
            "submodules": {},
            "classes": {
                "Events": 1,
                "Playback": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/base/playback.js",
            "line": 4
        },
        "components": {
            "name": "components",
            "submodules": {},
            "classes": {
                "Player": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/components/player.js",
            "line": 14
        },
        "playback": {
            "name": "playback",
            "submodules": {},
            "classes": {
                "HLS": 1,
                "HTML5Video": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/playbacks/html5_video/html5_video.js",
            "line": 13
        }
    },
    "classes": {
        "Events": {
            "name": "Events",
            "shortname": "Events",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "base",
            "file": "src/base/events.js",
            "line": 11,
            "is_constructor": 1,
            "example": [
                "\n    var video = new HTML5Video({src: 'http://example.com/example.mpd'})\n    //starts to play the video\n    video.play()"
            ]
        },
        "Playback": {
            "name": "Playback",
            "shortname": "Playback",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "base",
            "namespace": "",
            "file": "src/base/playback.js",
            "line": 4,
            "is_constructor": 1,
            "extends": "UIObject"
        },
        "Player": {
            "name": "Player",
            "shortname": "Player",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "components",
            "namespace": "",
            "file": "src/components/player.js",
            "line": 14,
            "is_constructor": 1,
            "extends": "BaseObject",
            "example": [
                "\n ### Using the Player\n\n [![Join the chat at https://gitter.im/clappr/clappr](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/clappr/clappr?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n Add the following script on your HTML:\n ```html\n <head>\n   <script type=\"text/javascript\" src=\"http://cdn.clappr.io/latest/clappr.min.js\"></script>\n </head>\n ```\n Now, create the player:\n ```html\n <body>\n   <div id=\"player\"></div>\n   <script>\n     var player = new Clappr.Player({source: \"http://your.video/here.mp4\", parentId: \"#player\"});\n   </script>\n </body>\n ```"
            ]
        },
        "HLS": {
            "name": "HLS",
            "shortname": "HLS",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "playback",
            "namespace": "",
            "file": "src/playbacks/hls/hls.js",
            "line": 20,
            "is_constructor": 1,
            "extends": "Playback",
            "example": [
                "\n    var video = new HTML5Video({src: 'http://example.com/example.mpd'})\n    //starts to play the video\n    video.play()"
            ]
        },
        "HTML5Video": {
            "name": "HTML5Video",
            "shortname": "HTML5Video",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "playback",
            "namespace": "",
            "file": "src/playbacks/html5_video/html5_video.js",
            "line": 13,
            "is_constructor": 1,
            "extends": "Playback",
            "example": [
                "\n    var video = new HTML5Video({src: 'http://example.com/example.mpd'})\n    //starts to play the video\n    video.play()"
            ]
        }
    },
    "classitems": [
        {
            "file": "src/base/events.js",
            "line": 215,
            "description": "Fired when an media control starts to play",
            "itemtype": "event",
            "name": "MEDIACONTROL_PLAYING",
            "class": "Events",
            "module": "base"
        },
        {
            "file": "src/base/events.js",
            "line": 222,
            "description": "Fired when an media control container changes",
            "itemtype": "event",
            "name": "MEDIACONTROL_CONTAINERCHANGED",
            "class": "Events",
            "module": "base"
        },
        {
            "file": "src/base/playback.js",
            "line": 11,
            "description": "constructor.",
            "itemtype": "method",
            "name": "constructor",
            "params": [
                {
                    "name": "general",
                    "description": "options",
                    "type": "Object"
                }
            ],
            "class": "Playback",
            "module": "base"
        },
        {
            "file": "src/base/playback.js",
            "line": 22,
            "description": "play.",
            "itemtype": "method",
            "name": "play",
            "class": "Playback",
            "module": "base"
        },
        {
            "file": "src/components/container/container.js",
            "line": 5,
            "description": "Container is responsible for the video rendering and state",
            "class": "Player",
            "module": "base"
        },
        {
            "file": "src/components/container_factory/container_factory.js",
            "line": 5,
            "description": "The ContainerFactory is responsible for manage playback bootstrap and create containers.",
            "class": "Player",
            "module": "base"
        },
        {
            "file": "src/components/core/core.js",
            "line": 5,
            "description": "The Core is responsible to manage Containers, the mediator, MediaControl\nand the player state.",
            "class": "Player",
            "module": "base"
        },
        {
            "file": "src/components/core_factory/core_factory.js",
            "line": 5,
            "description": "The Core Factory is responsible for instantiate the core and it's plugins.",
            "class": "Player",
            "module": "base"
        },
        {
            "file": "src/components/media_control/media_control.js",
            "line": 5,
            "description": "The MediaControl is responsible for displaying the Player controls.",
            "class": "Player",
            "module": "base"
        },
        {
            "file": "src/components/mediator.js",
            "line": 5,
            "description": "The mediator is a singleton for handling global events.",
            "class": "Player",
            "module": "base"
        },
        {
            "file": "src/components/player.js",
            "line": 42,
            "description": "constructor.",
            "itemtype": "method",
            "name": "constructor",
            "params": [
                {
                    "name": "options",
                    "description": "Data\nto configure player instance",
                    "type": "Object",
                    "props": [
                        {
                            "name": "autoPlay",
                            "description": "",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "mute",
                            "description": "",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "poster",
                            "description": "\nDefine a poster by adding its address `http://url/img.png` on your embed parameters. It will appear after video embed, disappear on play and go back when user stops the video.",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "default": "false\nif you want the video to start muted.",
            "class": "Player",
            "module": "components"
        },
        {
            "file": "src/components/player.js",
            "line": 78,
            "description": "attach player to element",
            "itemtype": "method",
            "name": "attachTo",
            "params": [
                {
                    "name": "element",
                    "description": "Data\nYou can use this method to attach the player to a given `element`. You don't need to do this when you specify it during the player instantiation passing the parentId param.",
                    "type": "Object"
                }
            ],
            "class": "Player",
            "module": "components"
        },
        {
            "file": "src/playbacks/html5_video/html5_video.js",
            "line": 25,
            "description": "component name",
            "itemtype": "property",
            "name": "name",
            "type": "{String}",
            "readonly": "",
            "class": "HTML5Video",
            "module": "playback"
        },
        {
            "file": "src/playbacks/html5_video/html5_video.js",
            "line": 32,
            "description": "tag name",
            "itemtype": "property",
            "name": "tagName",
            "type": "{String}",
            "class": "HTML5Video",
            "module": "playback"
        },
        {
            "file": "src/playbacks/html5_video/html5_video.js",
            "line": 38,
            "description": "template for the component",
            "itemtype": "property",
            "name": "template",
            "type": "{Object}",
            "class": "HTML5Video",
            "module": "playback"
        },
        {
            "file": "src/playbacks/html5_video/html5_video.js",
            "line": 45,
            "description": "data attributes (k,v) for the component",
            "itemtype": "property",
            "name": "attributes",
            "type": "{Object}",
            "class": "HTML5Video",
            "module": "playback"
        },
        {
            "file": "src/playbacks/html5_video/html5_video.js",
            "line": 56,
            "description": "events binding",
            "itemtype": "property",
            "name": "events",
            "type": "{Object}",
            "class": "HTML5Video",
            "module": "playback"
        },
        {
            "file": "src/playbacks/html5_video/html5_video.js",
            "line": 78,
            "description": "constructor.",
            "itemtype": "method",
            "name": "constructor",
            "params": [
                {
                    "name": "general",
                    "description": "options",
                    "type": "Object"
                }
            ],
            "class": "HTML5Video",
            "module": "playback"
        },
        {
            "file": "src/playbacks/html5_video/html5_video.js",
            "line": 102,
            "description": "Safari needs to be initialized with `preload` set to 'auto'",
            "itemtype": "method",
            "name": "setupSafari",
            "access": "private",
            "tagname": "",
            "class": "HTML5Video",
            "module": "playback"
        },
        {
            "file": "src/playbacks/html5_video/html5_video.js",
            "line": 112,
            "description": "This is called when loadedmetadata is fired by tag video.",
            "itemtype": "method",
            "name": "loadedMetadata",
            "params": [
                {
                    "name": "e",
                    "description": "An event handler",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "HTML5Video",
            "module": "playback"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nContainer is responsible for the video rendering and state",
            "line": " src/components/container/container.js:5"
        },
        {
            "message": "Missing item type\nThe ContainerFactory is responsible for manage playback bootstrap and create containers.",
            "line": " src/components/container_factory/container_factory.js:5"
        },
        {
            "message": "Missing item type\nThe Core is responsible to manage Containers, the mediator, MediaControl\nand the player state.",
            "line": " src/components/core/core.js:5"
        },
        {
            "message": "Missing item type\nThe Core Factory is responsible for instantiate the core and it's plugins.",
            "line": " src/components/core_factory/core_factory.js:5"
        },
        {
            "message": "Missing item type\nThe MediaControl is responsible for displaying the Player controls.",
            "line": " src/components/media_control/media_control.js:5"
        },
        {
            "message": "Missing item type\nThe mediator is a singleton for handling global events.",
            "line": " src/components/mediator.js:5"
        }
    ]
}